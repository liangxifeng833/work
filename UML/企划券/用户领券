@startuml
title 微信领券
|促销平台|
|公众账号|
start
/'=============用户触发点============'/
fork
#yellow:发消息交互触发 ☆ ☆;
fork again
	:自定义菜单触发;
fork again
	:页面触发;
end fork

 |促销平台|
  /'==============微信入口============'/
#yellow:促销活动路由接口;
 note left:微信的统一接口
 
 /'==============压力控制操作============'/
 group压力控制系统
	:服务器压力指数;
	if(是否超过服务器指数)then(no)
	else(yes)
		|公众账号|
		:同步返回，系统繁忙!;
		end
	endif
	|促销平台|
	fork
		:数量控制A;
		:入队列A;
		:读队列A;
	fork again
		:数量控制B;
		:入队列B;
		:读队列B;
	fork again
		:其他期数促销活动;
	end fork
	:服务器压力指数入队+1，出队-1}
 end group
 
  /'==============路由分发============'/
 #yellow:if(用户是否存在会话中) then(yes)
 	:会话路由类;
 	:会话过期控制\n５分钟过期;
 else(no)
 	#yellow:活动路由类 ☆;
 endif
 
 /'==========促销活动入口处理========'/
fork
	#yellow:微信领券;
	note right: 以下功能均为\n本促销活动相关处理类
fork again
	:其他促销活动入口类;
end fork
 
 /'==========公共验证部分========'/
 #yellow:公共判断 ☆ ;
 fork
 	#yellow:活动的大日期小时间点;
 fork again
 	if(是否打包)then(yes)
 		:以包为单位判断包库存;
 	else(no)
 		#yellow:根据每人每次领取券数量\n判券库存;
 	endif
 end fork
 
  /'=========业务罗辑阶段========'/
 group 个性化代码硬编，以目录来区分每期个性化阶段
	 #yellow:业务罗辑分阶段\n一次会话  ☆ ☆;
	 fork
		 #yellow:第一阶段;
	 fork again
	 	:第二阶段;
	  fork again
	 	:第n阶段;
	 end fork
	   :1. 只有最后一个阶段才能继续执行一下流程
	   2. 最后一个阶段需要确定领哪种券 ( 或包  )
	   3. 最后一个阶段判断如果领券，只正序识别第一个批次
	   4. 最后一个阶段实现身份识别，来区分领哪种包 }
 end group
 
 /'=========判断领券或包操作,发券========'/
 #yellow:领券;
 #yellow:if(是否打包券)then(yes)
 	:领取券包插件;
 else(no)
 endif
:券平台对外接口实现多批次，多张事务性更新}
  #yellow:请求券平台 ☆ ;
 
  /'=========请求微信平台========'/
 #red:请求微信发券接口 ☆ ☆ ☆ ;
 note left:异步请求
 
 |公众账号|
 #yellow:用户看到领券结果;
 end
 
@enduml
