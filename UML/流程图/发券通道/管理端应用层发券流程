@startuml
title 管理端应用层发券-流程

actor 小程序登录页 #red
/'-------------定义参与者别名 -------------------'/
participant "SendTicketController\n发券API" as sendC  #00FF00
participant "CommonSendTicket\n发券公共library" as common  #FFFFFF
participant "sendTicketRule\n发券规则表" as rule  #FFFFFF
participant "ruleEmployRelation\n发券规则与员工关系表" as rer  #FFFFFF
participant "SendTicket\n领域层发券API" as domain  #FFFFFF



小程序登录页->sendC:index_post()
activate sendC
group 参数说明
	note over sendC
		发券规则主键
		用户主键
		unionId
		券批次表主键,默认=0(不指定批次发券时使用该参数)
		通过other参数获取来源终端，当前时间戳
	end note
end
/'===========验证参数=============='/
group 发券主方法
	sendC->common:doMain(arr)
	activate common
		
		group 通过主键查询发券规则
			common->common:getSendRuleById(ruleId)
			activate common
				common->rule:getOne(ruleId)
				rule-->common:发券规则obj
			deactivate common
		end
		
		group 验证来源终端
			alt 来源终端 != 发券规则obj.sendTicketPerson || 来源终端 != 1管理端
				common-->sendC:管理端小程序发券才可以调用该接口
			end
		end
		
		group 验证发券人员
			common-->common:checkSendPerson()
			activate common
				common->rer:getList()\n查询发券规则与员工关系表
					note right common: WHERE 规则主键 AND 用户主键
				rer-->common:员工关系obj
				alt 员工关系obj 为空
					common-->common: 该人员无权发券
				common-->sendC:该人员无权发券
				end
			deactivate common
		end
		
		group 调用领域层接口发券
			common->common:callDomainApi()
			activate common
				common->domain:send()
				domain-->common:res
			deactivate common
		end
				
	common-->sendC:res
	deactivate common
end
/'===========处理逻辑=============='/

sendC-->小程序登录页:res
deactivate sendC
@enduml
